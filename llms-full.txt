# any-guardrail Documentation

> Complete documentation for any-guardrail - A Python library providing a single interface to different llm providers.

This file contains all documentation pages concatenated for easy consumption by AI systems.

---

## index.md

<!-- Source: index.md -->

<p align="center">
  <picture>
    <img src="./images/any-guardrail-logo.png" width="20%" alt="Project logo"/>
  </picture>
</p>

`any-guardrail` is a Python library providing a single interface to different guardrails.

### Getting Started

Refer to the [Quickstart](#./quickstart.md) for instructions on installation and usage.

### Guardrails

Refer to [Guardrails](#./api/guardrails.md) for the parameters for each guardrail.

Refer to [GuardrailFactory](#./api/guardrail_factory.md) for how to use the `GuardrailFactory` object.

## For AI Systems

This documentation is available in two AI-friendly formats:

- **[llms.txt](https://mozilla-ai.github.io/any-guardrail/llms.txt)** - A structured overview with curated links to key documentation sections
- **[llms-full.txt](https://mozilla-ai.github.io/any-guardrail/llms-full.txt)** - Complete documentation content concatenated into a single file


---

## quickstart.md

<!-- Source: quickstart.md -->

## Quickstart

### Requirements

- Python 3.11 or newer
- For guardrails that need permission granted on HuggingFace, make sure to get a HuggingFace access token as well. Then log into [HuggingFace Hub](https://huggingface.co/docs/huggingface_hub/en/quick-start#login-command)

### Installation

To install, you can use `pip`:

```bash
pip install any-guardrail
```

If you plan to use HuggingFace models that require extra permissions, please log into the HuggingFace Hub:

```bash
pip install --upgrade huggingface_hub

hf auth login
```

Make sure to agree to the terms and conditions of the model you are trying to access as well.

### Basic Usage

`GuardrailFactory` provides a seamless interface for interacting with the guardrail models. It allows you to see a list of all the supported guardrails, and to instantiate each supported guardrails. Here is a full example:

```python
from any_guardrail import GuardrailFactory
supported_guardrails = GuardrailFactory.list_all_supported_guardrails() # This will out a list of all guardrail identifiers
guardrail = GuardrailFactory.create_guardrail(support_guardrails[0])  # will create Deepset's deberta prompt injection defense model
result = guardrail.safety_review("All smiles from me!")
assert result.unsafe == False
```


---

## api/guardrails.md

<!-- Source: api/guardrails.md -->

## Guardrails

::: any_guardrail.guardrails.deepset
::: any_guardrail.guardrails.duoguard
::: any_guardrail.guardrails.flowjudge
::: any_guardrail.guardrails.glider
::: any_guardrail.guardrails.harmguard
::: any_guardrail.guardrails.injecguard
::: any_guardrail.guardrails.jasper
::: any_guardrail.guardrails.pangolin
::: any_guardrail.guardrails.protectai
::: any_guardrail.guardrails.sentinel
::: any_guardrail.guardrails.shield_gemma


---

## api/guardrail_factory.md

<!-- Source: api/guardrail_factory.md -->

## Guardrail Factory

::: any_guardrail.api


---
